################### basic config #####################

listen 127.0.0.1:11311 # TODO : listening multiple ports
daemonize no
pid_file /tmp/yarmproxy.pid
log_file proxy.log     # stdout if not specified
log_level WARN  # DEBUG/INFO/WARN/ERROR/FATAL

max_namespace_length 4  #  limit namespace-prefix length of redis/memcached keys

worker_threads 1       # worker threads count, use number of CPU-processors if 0

client_idle_timeout  60000 # in milliseconds. if there is no data, close the client connection on timeout
command_exec_timeout  20  # in milliseconds. set a bigger number if you have big commands(for example, very big string/bulk in mget/mget with many keys, etc)

################### worker thread configuations  ####################
worker {
  cpu_affinity on            # on / off
  max_idle_backends   32     # max idle connections per backend of one woker
  buffer_size         4      # in KB, >=1 && <= 1024 && == 2^N
  buffer_trunk_size   512    # in KB, >=32 && <= 8192 && == 2^N. disabled if 0
}

################### redis/memcached clusters config #####################
cluster {
  protocol redis
  namespace _           # "_" is the default namespace
  backends {
    backend 127.0.0.1:6379 3000  # weight is 3000
    backend 127.0.0.1:8888 5000
    backend 127.0.0.1:6380 5000  # wieght is 5000
   #backend 127.0.0.1:6381 4000
   #backend 127.0.0.1:6382 4000
   #backend 127.0.0.1:6383 4000
   #backend 127.0.0.1:16379 1000
    backend 127.0.0.1:16380 5000
  }
}

cluster {
  protocol redis
  namespace vn vm stu   # keys starts with 'vn#', 'vm#', or 'stu#'
  backends {
    backend 127.0.0.1:6379 10000
    backend 127.0.0.1:6380 50000
  }
}

cluster {
  protocol memcached
  namespace _ ar gtbz    # default and other namespaces
  backends {
   #backend 127.0.0.1:21211 10000
   #backend 127.0.0.1:21212 10000
    backend 127.0.0.1:11211 10000
    backend 127.0.0.1:11212 10000
    backend 127.0.0.1:11213 10000
    backend 127.0.0.1:11214 10000
    backend 127.0.0.1:11215 10000
  }
}


# incluce clusters/redis-clusters.conf

